apiVersion: v1
kind: Service
metadata:
  name: redis-main
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis

---

apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: redis-main
spec:
  selector:
    matchLabels:
      app: "redis"
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: main
        image: registry.k8s.io/redis  # or just image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi
        ports:
        - containerPort: 6379

---

apiVersion: v1
kind: Service
metadata:
  name: ip-visit-counter
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: ip-visit-counter

---

apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: ip-visit-counter
spec:
  selector:
    matchLabels:
      app: "ip-visit-counter"
  replicas: 1
  template:
    metadata:
      labels:
        app: ip-visit-counter
    spec:
      containers:
      - name: main
        image: gofun:lala2
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: REDISADDRESS
          value: "redis-main:6379"
        - name: RESPONSEFILE
          value: "/app/response.txt"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /count
        pathType: Prefix
        backend:
          service:
            name: ip-visit-counter
            port:
              number: 80